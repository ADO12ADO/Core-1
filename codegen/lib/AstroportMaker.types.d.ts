/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export declare type Uint64 = string;
export declare type Decimal = string;
export interface InstantiateMsg {
    astro_token_contract: string;
    factory_contract: string;
    governance_contract?: string | null;
    governance_percent?: Uint64 | null;
    max_spread?: Decimal | null;
    owner: string;
    staking_contract: string;
}
export declare type ExecuteMsg = {
    collect: {
        assets: AssetWithLimit[];
    };
} | {
    update_config: {
        factory_contract?: string | null;
        governance_contract?: UpdateAddr | null;
        governance_percent?: Uint64 | null;
        max_spread?: Decimal | null;
        staking_contract?: string | null;
    };
} | {
    update_bridges: {
        add?: [AssetInfo, AssetInfo][] | null;
        remove?: AssetInfo[] | null;
    };
} | {
    swap_bridge_assets: {
        assets: AssetInfo[];
        depth: number;
    };
} | {
    distribute_astro: {};
} | {
    propose_new_owner: {
        expires_in: number;
        owner: string;
    };
} | {
    drop_ownership_proposal: {};
} | {
    claim_ownership: {};
} | {
    enable_rewards: {
        blocks: number;
    };
};
export declare type AssetInfo = {
    token: {
        contract_addr: Addr;
    };
} | {
    native_token: {
        denom: string;
    };
};
export declare type Addr = string;
export declare type Uint128 = string;
export declare type UpdateAddr = {
    set: string;
} | {
    remove: {};
};
export interface AssetWithLimit {
    info: AssetInfo;
    limit?: Uint128 | null;
}
export declare type QueryMsg = {
    config: {};
} | {
    balances: {
        assets: AssetInfo[];
    };
} | {
    bridges: {};
};
export interface MigrateMsg {
}
export interface BalancesResponse {
    balances: Asset[];
}
export interface Asset {
    amount: Uint128;
    info: AssetInfo;
}
export declare type ArrayOfTupleOfStringAndString = [string, string][];
export interface ConfigResponse {
    astro_token_contract: Addr;
    factory_contract: Addr;
    governance_contract?: Addr | null;
    governance_percent: Uint64;
    max_spread: Decimal;
    owner: Addr;
    pre_upgrade_astro_amount: Uint128;
    remainder_reward: Uint128;
    staking_contract: Addr;
}
