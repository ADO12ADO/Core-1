"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.AstroportWhitelistMessageComposer = void 0;
var tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
var encoding_1 = require("@cosmjs/encoding");
var AstroportWhitelistMessageComposer = /** @class */ (function () {
    function AstroportWhitelistMessageComposer(sender, contractAddress) {
        var _this = this;
        this.execute = function (_a, funds) {
            var msgs = _a.msgs;
            return {
                typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        execute: {
                            msgs: msgs
                        }
                    })),
                    funds: funds
                })
            };
        };
        this.freeze = function (funds) {
            return {
                typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        freeze: {}
                    })),
                    funds: funds
                })
            };
        };
        this.updateAdmins = function (_a, funds) {
            var admins = _a.admins;
            return {
                typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        update_admins: {
                            admins: admins
                        }
                    })),
                    funds: funds
                })
            };
        };
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.execute = this.execute.bind(this);
        this.freeze = this.freeze.bind(this);
        this.updateAdmins = this.updateAdmins.bind(this);
    }
    return AstroportWhitelistMessageComposer;
}());
exports.AstroportWhitelistMessageComposer = AstroportWhitelistMessageComposer;
