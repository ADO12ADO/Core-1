/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export interface InstantiateMsg {
    astroport_factory: string;
}
export declare type ExecuteMsg = {
    receive: Cw20ReceiveMsg;
} | {
    execute_swap_operations: {
        max_spread?: Decimal | null;
        minimum_receive?: Uint128 | null;
        operations: SwapOperation[];
        to?: string | null;
    };
} | {
    execute_swap_operation: {
        max_spread?: Decimal | null;
        operation: SwapOperation;
        single: boolean;
        to?: string | null;
    };
} | {
    assert_minimum_receive: {
        asset_info: AssetInfo;
        minimum_receive: Uint128;
        prev_balance: Uint128;
        receiver: string;
    };
};
export declare type Uint128 = string;
export declare type Binary = string;
export declare type Decimal = string;
export declare type SwapOperation = {
    native_swap: {
        ask_denom: string;
        offer_denom: string;
    };
} | {
    astro_swap: {
        ask_asset_info: AssetInfo;
        offer_asset_info: AssetInfo;
    };
};
export declare type AssetInfo = {
    token: {
        contract_addr: Addr;
    };
} | {
    native_token: {
        denom: string;
    };
};
export declare type Addr = string;
export interface Cw20ReceiveMsg {
    amount: Uint128;
    msg: Binary;
    sender: string;
}
export declare type QueryMsg = {
    config: {};
} | {
    simulate_swap_operations: {
        offer_amount: Uint128;
        operations: SwapOperation[];
    };
};
export interface MigrateMsg {
}
export interface ConfigResponse {
    astroport_factory: string;
}
export interface SimulateSwapOperationsResponse {
    amount: Uint128;
}
