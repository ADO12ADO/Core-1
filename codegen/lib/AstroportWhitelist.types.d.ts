/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export interface InstantiateMsg {
    admins: string[];
    mutable: boolean;
}
export declare type ExecuteMsg = {
    execute: {
        msgs: CosmosMsgForEmpty[];
    };
} | {
    freeze: {};
} | {
    update_admins: {
        admins: string[];
    };
};
export declare type CosmosMsgForEmpty = {
    bank: BankMsg;
} | {
    custom: Empty;
} | {
    staking: StakingMsg;
} | {
    distribution: DistributionMsg;
} | {
    wasm: WasmMsg;
};
export declare type BankMsg = {
    send: {
        amount: Coin[];
        to_address: string;
        [k: string]: unknown;
    };
} | {
    burn: {
        amount: Coin[];
        [k: string]: unknown;
    };
};
export declare type Uint128 = string;
export declare type StakingMsg = {
    delegate: {
        amount: Coin;
        validator: string;
        [k: string]: unknown;
    };
} | {
    undelegate: {
        amount: Coin;
        validator: string;
        [k: string]: unknown;
    };
} | {
    redelegate: {
        amount: Coin;
        dst_validator: string;
        src_validator: string;
        [k: string]: unknown;
    };
};
export declare type DistributionMsg = {
    set_withdraw_address: {
        address: string;
        [k: string]: unknown;
    };
} | {
    withdraw_delegator_reward: {
        validator: string;
        [k: string]: unknown;
    };
};
export declare type WasmMsg = {
    execute: {
        contract_addr: string;
        funds: Coin[];
        msg: Binary;
        [k: string]: unknown;
    };
} | {
    instantiate: {
        admin?: string | null;
        code_id: number;
        funds: Coin[];
        label: string;
        msg: Binary;
        [k: string]: unknown;
    };
} | {
    migrate: {
        contract_addr: string;
        msg: Binary;
        new_code_id: number;
        [k: string]: unknown;
    };
} | {
    update_admin: {
        admin: string;
        contract_addr: string;
        [k: string]: unknown;
    };
} | {
    clear_admin: {
        contract_addr: string;
        [k: string]: unknown;
    };
};
export declare type Binary = string;
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export interface Empty {
    [k: string]: unknown;
}
export declare type QueryMsg = {
    admin_list: {};
} | {
    can_execute: {
        msg: CosmosMsgForEmpty;
        sender: string;
    };
};
export interface AdminListResponse {
    admins: string[];
    mutable: boolean;
}
export interface CanExecuteResponse {
    can_execute: boolean;
}
